<button type="button" id="undo" class="btn btn-primary pull-right"><strong><i class="fa fa-key" aria-hidden="true">&nbsp;</i>View Grid Legend</strong></button>

@(Html.Kendo().Window()
    .Name("window")
    .Title("Grid legend")
    .Content(@<text>
        <div class="container-fluid">
            <table class="table table-condensed table-responsive">
                <thead>
                    <tr>
                        <th>Colour</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="red">Red</td>
                        <td>Request has not been approved yet</td>
                    </tr>
                    <tr>
                        <td class="green">Green</td>
                        <td>Request has been approved</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </text>)
    .Draggable()
    .Resizable()
    .Width(600)
    .Actions(actions => actions.Pin().Minimize().Maximize().Close())
    .Events(ev => ev.Close("onClose"))
    .Visible(false)
)

<br />
<br />
<br />

<div class="demo-section k-content" style="text-align: center;">
    @(Html.Kendo().Calendar()
            .Name("calendar")
            .HtmlAttributes(new { style = "width:100%;" })
    )
</div>

@(Html.Kendo().Grid<vm_Grid>()
    .Name("grid")
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(p =>
        {
            p.Id(m => m.PK_ID);
            p.Field(m => m.StartDate);
            p.Field(m => m.EndDate);
            p.Field(m => m.Reason);
            p.Field(m => m.Entitlement);
            p.Field(m => m.BreakDuration);
            p.Field(m => m.Approved);
        })
        .Read(read => read.Action("LMS_Read", "Home", new { area = "" }))
        .Create(create => create.Action("LMS_Create", "Home", new { area = "" }))
        .Update(update => update.Action("LMS_Update", "Home", new { area = "" }))
        .Destroy(update => update.Action("LMS_Delete", "Home", new { area = "" }))

        .ServerOperation(false)
    )
      .Events(evt =>
    {
        evt.DataBound("onDataBound");
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create().Text("Add Request").HtmlAttributes(new { @class = "pull-left" });
    })
    .Columns(column =>
    {
        column.Bound(c => c.PK_ID)
            .Visible(false)
            .Width(90);
        column.Bound(c => c.StartDate)
            .Locked(false)
            .Filterable(f =>
            {
                f.UI(GridFilterUIRole.DateTimePicker);
            })
            .Format("{0:dd/MM/yyyy}")
            .Width(90);
        column.Bound(c => c.EndDate)
            .Locked(false)
            .Filterable(f =>
            {
                f.UI(GridFilterUIRole.DateTimePicker);
            })
            .Format("{0:dd/MM/yyyy}")
            .Width(90);
        column.Bound(c => c.Reason)
            .Locked(false)
            .Width(90);
        column.Bound(c => c.Approved)
            .Locked(false)
            .Width(90);
        column.Bound(c => c.Entitlement)
            .Locked(false)
            .Width(90);
        column.Bound(c => c.BreakDuration)
            .Locked(false)
            .Width(90)
            .Visible(false);
        column.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(90);
    })
    .Editable(ed => ed
        .Mode(GridEditMode.PopUp)
        .TemplateName("PopUpTemplate")
    )
    .Groupable()
    .Mobile(MobileMode.Auto)
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new int[] { 5, 10, 20, 50, 100 })
        .ButtonCount(5)
        .Messages(msg => msg.Empty("No records to display"))
    )
    .ColumnMenu()
    .Sortable(s => s.SortMode(GridSortMode.MultipleColumn))
    .Scrollable()
    .Filterable()
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .HtmlAttributes(new { @class = "kendoGrid", @style = "height:480px;max-height:100%;" })
)

<style>
    div.k-edit-form-container {
        width: 550px;
    }

    .k-grid-add {
        color: rgb(153, 153, 153);
        background-color: rgb(242, 242, 242);
    }

    .k-grid-add:hover {
        color: white;
        background-color: rgb(58, 87, 149);
    }

    .k-grid-edit {
        color: rgb(153, 153, 153);
        background-color: rgb(242, 242, 242);
    }

    .k-grid-edit:hover {
        color: white;
        background-color: rgb(76, 175, 80);
    }

    .k-grid-delete {
        color: rgb(153, 153, 153);
        background-color: rgb(242, 242, 242);
    }

    .k-grid-delete:hover {
        color: white;
        background-color: rgb(244, 67, 54);
    }

    .demo-section p {
        margin: 3px 0 20px;
        line-height: 50px;
    }

    .demo-section .k-button {
        width: 250px;
    }

    .k-notification {
        border: 0;
    }

    .k-notification-error.k-group {
        background: rgba(100%,0%,0%,.7);
        color: #ffffff;
    }

    .wrong-pass {
        width: 300px;
        height: 100px;
    }

    .wrong-pass h3 {
        font-size: 1em;
        padding: 32px 10px 5px;
        color: rgb(255,52,72);
    }

    .wrong-pass > h3 {
        margin-top: 0px;
    }

    .wrong-pass img {
        float: left;
        margin: 30px 15px 30px 30px;
    }

    .wrong-pass p {
        color: rgb(255,52,72);
    }

    .k-notification-upload-success.k-group {
        background: rgba(0%,60%,0%,.7);
        color: #fff;
    }

    .upload-success {
        width: 240px;
        height: 100px;
        padding: 0 30px;
        line-height: 100px;
    }

    .upload-success h3 {
        font-size: 1.7em;
        font-weight: normal;
        display: inline-block;
        vertical-align: middle;
        color: #fff;
    }

    .upload-success img {
        display: inline-block;
        vertical-align: middle;
        margin-right: 10px;
    }
    
    .green {
        margin-bottom: 0px;
        border-radius: 0px;
        background-color: rgba(198,239, 206, 1);
        color: rgb(0,97, 0);
        font-weight: bolder;
        text-align: center;
    }

    .red {
        margin-bottom: 0px;
        border-radius: 0px;
        background-color: rgba(255,199, 206, 1);
        color: rgb(156,0,6);
        font-weight: bolder;
        text-align: center;
    }

    #example {
        min-height: 500px;
    }

    #undo {
        text-align: center;
        /*position: absolute;*/
        white-space: nowrap;
        padding: 1em;
        cursor: pointer;
    }

    .k-window-content p {
        margin-bottom: 1em;
    }

    .k-window-content a {
        color: #BBB;
    }
</style>

<script type="text/javascript">
    kendo.culture().calendar.firstDay = 1;
</script>

<script>
    (function ($, kendo) {
        $.extend(true, kendo.ui.validator, {
            rules: {
                greaterdate: function (input) {
                    if (input.is("[data-val-greaterdate]") && input.val() != "") {
                        var date = kendo.parseDate(input.val()),
                            earlierDate = kendo.parseDate($("[name='" + input.attr("data-val-greaterdate-earlierdate") + "']").val());
                        return !date || !earlierDate || earlierDate.getTime() < date.getTime();
                    }
                    return true;
                }
            },
            messages: {
                greaterdate: function (input) {
                    return input.attr("data-val-greaterdate");
                }
            }
        });
    })(jQuery, kendo);
</script>

<script>
    function onDataBound(e) {
        var grid = $("#" + e.sender.table.prevObject[0].id).data("kendoGrid");

        grid.tbody.find('>tr').each(function () {
            var dataItem = grid.dataItem(this);

            changeRow($(this), dataItem.Approved);
        });
    }

    function changeRow(row, value) {
        if (value === "yes") {
            row.removeClass("red");
            row.addClass("green");
        }

        if (value === "no") {
            row.removeClass("green");
            row.addClass("red");
        }
    }
</script>

<script>
    function onClose() {
        $("#undo").show();
    }

    $(document).ready(function () {
        $("#window").data("kendoWindow").center();
        $("#undo").bind("click", function() {
                $("#window").data("kendoWindow").open();
            });
    });
</script>



